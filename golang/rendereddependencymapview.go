package gaia

import "fmt"
import "github.com/aporeto-inc/elemental"

// RendereddependencymapviewIdentity represents the Identity of the object
var RendereddependencymapviewIdentity = elemental.Identity{
	Name:     "rendereddependencymapview",
	Category: "rendereddependencymapviews",
}

// RendereddependencymapviewsList represents a list of Rendereddependencymapviews
type RendereddependencymapviewsList []*Rendereddependencymapview

// Rendereddependencymapview represents the model of a rendereddependencymapview
type Rendereddependencymapview struct {
	// ID is the identifier of the object.
	ID string `json:"ID" cql:"-"`
}

// NewRendereddependencymapview returns a new *Rendereddependencymapview
func NewRendereddependencymapview() *Rendereddependencymapview {

	return &Rendereddependencymapview{}
}

// Identity returns the Identity of the object.
func (o *Rendereddependencymapview) Identity() elemental.Identity {

	return RendereddependencymapviewIdentity
}

// Identifier returns the value of the object's unique identifier.
func (o *Rendereddependencymapview) Identifier() string {

	return o.ID
}

func (o *Rendereddependencymapview) String() string {

	return fmt.Sprintf("<%s:%s>", o.Identity().Name, o.Identifier())
}

// SetIdentifier sets the value of the object's unique identifier.
func (o *Rendereddependencymapview) SetIdentifier(ID string) {

	o.ID = ID
}

// Validate valides the current information stored into the structure.
func (o *Rendereddependencymapview) Validate() elemental.Errors {

	errors := elemental.Errors{}

	if len(errors) > 0 {
		return errors
	}

	return nil
}

// SpecificationForAttribute returns the AttributeSpecification for the given attribute name key.
func (o Rendereddependencymapview) SpecificationForAttribute(name string) elemental.AttributeSpecification {

	return RendereddependencymapviewAttributesMap[name]
}

// RendereddependencymapviewAttributesMap represents the map of attribute for Rendereddependencymapview.
var RendereddependencymapviewAttributesMap = map[string]elemental.AttributeSpecification{
	"ID": elemental.AttributeSpecification{
		AllowedChoices: []string{},
		Autogenerated:  true,
		Exposed:        true,
		Filterable:     true,
		Format:         "free",
		Identifier:     true,
		Name:           "ID",
		Orderable:      true,
		ReadOnly:       true,
		Type:           "string",
		Unique:         true,
	},
}
